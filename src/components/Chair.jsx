/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/chair.gltf 
*/

import React, { useRef } from 'react'
import { useGLTF, useTexture } from '@react-three/drei'
import { MeshStandardMaterial } from 'three';

import *as  THREE from 'three';
import { useCustomization } from '../Context/customizable';

const Chair = (props) => {

  const {material, legs, chairColor, cushionColor} = useCustomization();

  const { nodes, materials } = useGLTF('./models/chair.gltf')

  const leatherTextureProps = useTexture({
    // map: './textures/leather/Leather_008_Base Color.jpg',
    normalMap: './textures/leather/Leather_008_Normal.jpg',
    roughnessMap: './textures/leather/Leather_008_Roughness.jpg',
    aoMap: './textures/leather/Leather_008_Ambient Occlusion.jpg',
  })

  //Setting the texture Repeatation
//  leatherTextureProps.map.repeat.set(3, 3);
 leatherTextureProps.normalMap.repeat.set(3, 3);
 leatherTextureProps.roughnessMap.repeat.set(3, 3);
 leatherTextureProps.aoMap.repeat.set(3, 3);

  //wrapping texture for UV Coordinates 
//  leatherTextureProps.map.wrapS = leatherTextureProps.map.wrapT = 
 leatherTextureProps.normalMap.wrapS = leatherTextureProps.normalMap.wrapT = 
 leatherTextureProps.roughnessMap.wrapS = leatherTextureProps.roughnessMap.wrapT = 
 leatherTextureProps.aoMap.wrapS = leatherTextureProps.aoMap.wrapT = 

 THREE.RepeatWrapping;
 

//Fabric Texture
const FabricTextureProps = useTexture({
  // map: './textures/fabric/Fabric_Knitted_006_basecolor.jpg',
  normalMap: './textures/fabric/Fabric_Knitted_006_normal.jpg',
  roughnessMap: './textures/fabric/Fabric_Knitted_006_roughness.jpg',
  aoMap: './textures/fabric/Fabric_Knitted_006_ambientOcclusion.jpg',
})

  //Setting the Fabric texture Repeatation
  // FabricTextureProps.map.repeat.set(3, 3);
  FabricTextureProps.normalMap.repeat.set(3, 3);
  FabricTextureProps.roughnessMap.repeat.set(3, 3);
  FabricTextureProps.aoMap.repeat.set(3, 3);
 
   //wrapping Fabric texture for UV Coordinates 
  //  FabricTextureProps.map.wrapS = FabricTextureProps.map.wrapT = 
   FabricTextureProps.normalMap.wrapS = FabricTextureProps.normalMap.wrapT = 
   FabricTextureProps.roughnessMap.wrapS = FabricTextureProps.roughnessMap.wrapT = 
   FabricTextureProps.aoMap.wrapS = FabricTextureProps.aoMap.wrapT = 
 
  THREE.RepeatWrapping;


  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Chair.geometry} > 
         <meshStandardMaterial
          {...(material === "leather"
          ? leatherTextureProps
          : FabricTextureProps )}
          color={chairColor.color}
           
        />
      </mesh>

      <mesh geometry={nodes.Cushion.geometry} >
            <meshStandardMaterial {...FabricTextureProps} color={cushionColor.color} />
      </mesh>

      <mesh geometry={nodes.Legs1.geometry} material={materials.Legs} visible={legs === 1}/>
      <mesh geometry={nodes.Legs2.geometry} material={materials.Legs} visible={legs === 2}/>
    </group>
  )
}

useGLTF.preload('/chair.gltf')

export default Chair;